(() => {
  const e = /([\w-]+)|['"]{1}([^'"]*)['"]{1}/g,
    t = /<(?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])+>/g,
    o = ["br", "col", "hr", "img", "input", "link", "meta"],
    r = (e, t) => {
      if (t && 11 == t.nodeType) e.e.parentNode.replaceChild(t, e.e);
      else if (Array.isArray(t)) {
        const {
          t: o
        } = e, {
          childNodes: r
        } = o, n = t.length;
        for (let e = j = 0; e < r.length && j < n;) {
          const n = r[e].o;
          n ? n == t[j].o ? (e++, j++) : t.some(e => e.o == n) ? o.insertBefore(t[j++], r[e++]) : o.removeChild(r[e]) : e++
        }
        for (; j < n;) o.appendChild(t[j++])
      } else e.e.nodeValue = t
    };
  Goolf = (() => {
    let n, s;
    return (c, ...l) => {
      if (!n) {
        const f = ((r, n, s = -1, c = [], l = document.createDocumentFragment()) => (r.replace(t, (t, l) => {
          const f = "/" !== t[1],
            i = l + t.length,
            a = r[i],
            d = e => a && "<" !== a && ((e, t, o, r, n = e.slice(t, e.indexOf("<", t)), s = n.split("Þ"), c = (e => s[e].trim().length > 0 && o.appendChild(document.createTextNode(s[e])))) => {
              c(0);
              for (let e = 1, t = s.length; e < t; ++e) {
                const t = o.appendChild(document.createTextNode("Þ"));
                r.push({
                  e: t,
                  t: t.parentNode
                }), c(e)
              }
            })(r, i, e, n),
            m = {
              r: ""
            };
          if (f) {
            s++, ((t, r, n = 0, s) => {
              t.replace(e, e => {
                n || ((o.includes(e) || "/" === t[t.length - 2]) && (r.n = !0), r.r = e)
              })
            })(t, m);
            const r = document.createElement(m.r),
              n = c[s - 1];
            d(r), n && n.append(r), c[s] = r
          }
          f && !m.n || d(c[--s])
        }), l.appendChild(c[0]), l))(c.join("Þ").trim(), n = []);
        for (let e = 0, t = n.length; e < t; ++e) {
          const t = l[e];
          if (Array.isArray(t)) {
            n[e].e.nodeValue = "";
            const o = document.createDocumentFragment();
            for (let e = 0, r = t.length; e < r;) o.appendChild(t[e++]);
            n[e].t.appendChild(o)
          } else r(n[e], t)
        }
        return f.firstChild.o = f.o = Math.random() + Date.now(), s = l, f
      }
      for (let e = 0, t = l.length; e < t; ++e) {
        const t = l[e];
        s[e] != t && (r(n[e], t), s[e] = t)
      }
    }
  })
})();